#
# LICENSE UPL 1.0
#
# Copyright (c) 1982-2018 Oracle and/or its affiliates. All rights reserved.
# 
# Since: February, 2018
# Author: sergio.leunissen@oracle.com
# Description: Creates an Docker engine installation on Oracle Linux 7 using Btrfs
# 
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
# 

# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

# define hostname
NAME = "ol7-docker-engine"

# Convenience function -- Ensure URL has a scheme
def ensure_scheme(url)
  (url =~ /.*:\/\// ? '' : 'http://') + url
end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "ol7-latest"
  config.vm.box_url = "https://yum.oracle.com/boxes/oraclelinux/latest/ol7-latest.box"
  config.vm.define NAME
  
  # Set proxies if vagrant-proxyconf is installed
  if Vagrant.has_plugin?("vagrant-proxyconf")
    ["http_proxy", "HTTP_PROXY"].each do |proxy_var|
      if proxy = ENV[proxy_var]
        puts "HTTP proxy: " + proxy
        config.proxy.http = ensure_scheme(proxy)
        break
      end
    end

    ["https_proxy", "HTTPS_PROXY"].each do |proxy_var|
      if proxy = ENV[proxy_var]
        puts "HTTPS proxy: " + proxy
        config.proxy.https = ensure_scheme(proxy)
        break
      end
    end

    # We should not proxy local IPs (docker bridge, ...)
    # Unfortunately we can't use CIDR with no_proxy, so we have to enumerate and
    # 'blacklist' *all* IPs
    no_proxy = ''
    ["no_proxy", "NO_PROXY"].each do |proxy_var|
      if ENV[proxy_var]
        no_proxy = ENV[proxy_var]
        puts "No proxy: " + no_proxy
        no_proxy += ','
        break
      end
    end
    config.proxy.no_proxy = no_proxy + "localhost,.vagrant.vm," + (".0"..".255").to_a.join(",")
  end

  config.vm.box_check_update = false
  
  # change memory size
  config.vm.provider "virtualbox" do |v|
    v.memory = 2048
    v.name = NAME
  end

  # VM hostname
  config.vm.hostname = NAME + ".vagrant.vm"

  # Provision everything on the first run
  config.vm.provision "shell", path: "scripts/install.sh"

  end
